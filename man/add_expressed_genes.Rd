% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_expressed_genes.R
\name{add_expressed_genes}
\alias{add_expressed_genes}
\title{Adding the nearest expressed genes}
\usage{
add_expressed_genes(
  input_file = NULL,
  tissue,
  gtf_path,
  species = "Homo_sapiens",
  annot_ers
)
}
\arguments{
\item{input_file}{GTEX median expression file, if left as NULL
\code{\link{get_tissue}} will use the default file}

\item{tissue}{Tissue to filter for. See tissue_options for options}

\item{gtf_path}{gtf file path}

\item{species}{character string containing the species to filter for,
Homo sapiens is the default}

\item{annot_ers}{annotated ERs, should have an mcols column called "annotation"}
}
\value{
Granges with annotated ERs and details of their nearest expressed
genes
}
\description{
Updating expressed regions with the expressed gene that is closest to it.
After entering the tissue that has been sequenced, the nearest gene and
nearest expressed gene will be added to the metadata columns of the annotated
ERs.
}
\examples{
\dontshow{
if (!exists("rec_url")) {
    rec_url <- recount::download_study(
        project = "SRP012682",
        type = "samples",
        download = FALSE
    ) # .file_cache is an internal function to download a bigwig file from a link
    # if the file has been downloaded recently, it will be retrieved from a cache
}
bw_path <- .file_cache(rec_url[1])
if (!exists("gtf_path")) {
    gtf_url <- paste0(
        "http://ftp.ensembl.org/pub/release-103/gtf/",
        "homo_sapiens/Homo_sapiens.GRCh38.103.chr.gtf.gz"
    )
    gtf_path <- .file_cache(gtf_url)
}
}

if (!exists("opt_ers1")) {
    opt_ers1 <- ODER(
        bw_paths = bw_path, auc_raw = auc_example,
        auc_target = 40e6 * 100, chrs = c("chr21", "chr22"),
        genome = "hg38", mccs = c(5, 10), mrgs = c(10, 20),
        gtf = gtf_path, ucsc_chr = TRUE, ignore.strand = TRUE,
        exons_no_overlap = NULL, bw_chr = "chr"
    )
}
junctions <- SummarizedExperiment::rowRanges(dasper::junctions_example)
if (!exists("genom_state")) {
    genom_state <- generate_genomic_state(
        gtf = gtf_path,
        chrs_to_keep = c("1", "2", "X"), ensembl = TRUE
    )
}
if (!exists("annot_ers1")) {
    annot_ers1 <- annotatERs(
        opt_ers = head(opt_ers1[["opt_ers"]], 100), junc_data = junctions,
        gtf_path = gtf_path, chrs_to_keep = c("21", "22"), ensembl = TRUE,
        genom_state = genom_state
    )
}
annot_ers <- add_expressed_genes(
    tissue = "lung", gtf_path = gtf_path,
    annot_ers = annot_ers1
)
}
