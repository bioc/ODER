% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_expressed_genes.R
\name{get_nearest_expressed_genes}
\alias{get_nearest_expressed_genes}
\title{Get the expressed genes}
\usage{
get_nearest_expressed_genes(annot_ers, exp_genes, gtf_path)
}
\arguments{
\item{annot_ers}{annotated ERs, should have an mcols column called "annotation"}

\item{exp_genes}{GRanges containing the expressed genes of a particular tissue}

\item{gtf_path}{gtf file path}
}
\value{
GRanges with the expressed genes for a specific tissue
}
\description{
Adds the overall nearest gene and the nearest expressed gene to the annotated
expressed regions as metadata columns. Takes in annotated ers produced by
\code{\link{annotatERs}}, expressed genes from \code{\link{get_expressed_genes}}
and a gtf file.
}
\examples{

lung_tissue <- get_tissue(tissue = "lung")
\dontshow{
if (!exists("rec_url")) {
    rec_url <- recount::download_study(
        project = "SRP012682",
        type = "samples",
        download = FALSE
    ) # .file_cache is an internal function to download a bigwig file from a link
    # if the file has been downloaded recently, it will be retrieved from a cache
}
bw_path <- .file_cache(rec_url[1])
if (!exists("gtf_path")) {
    gtf_url <- paste0(
        "http://ftp.ensembl.org/pub/release-103/gtf/",
        "homo_sapiens/Homo_sapiens.GRCh38.103.chr.gtf.gz"
    )
    gtf_path <- .file_cache(gtf_url)
}
if (!exists("opt_ers1")) {
    opt_ers1 <- ODER(
        bw_paths = bw_path, auc_raw = auc_example,
        auc_target = 40e6 * 100, chrs = c("chr21", "chr22"),
        genome = "hg38", mccs = c(5, 10), mrgs = c(10, 20),
        gtf = gtf_path, ucsc_chr = TRUE, ignore.strand = TRUE,
        exons_no_overlap = NULL, bw_chr = "chr"
    )
}
junctions <- SummarizedExperiment::rowRanges(dasper::junctions_example)
}
if (!exists("genom_state")) {
    genom_state <- generate_genomic_state(
        gtf = gtf_path,
        chrs_to_keep = c("1", "2", "X"), ensembl = TRUE
    )
}
if (!exists("annot_ers1")) {
    annot_ers1 <- annotatERs(
        opt_ers = head(opt_ers1[["opt_ers"]], 100), junc_data = junctions,
        gtf_path = gtf_path, chrs_to_keep = c("21", "22"), ensembl = TRUE,
        genom_state = genom_state
    )
}
lung_tissue <- get_tissue(tissue = "lung")

if (!exists("lung_exp_genes")) {
    lung_exp_genes <- get_expressed_genes(
        gtf_path = gtf_path,
        tissue_df = lung_tissue
    )
}
full_annot_ers <- get_nearest_expressed_genes(
    annot_ers = annot_ers1,
    exp_genes = lung_exp_genes, gtf_path = gtf_path
)
}
