% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/annotatER.R
\name{annotatERs}
\alias{annotatERs}
\title{Connects ERs to genes using junction data, then classifies ERs into "exonic",
"intronic", "intergenic", or a combination of these categories}
\usage{
annotatERs(
  opt_ers,
  junc_data,
  gtf_path,
  chrs_to_keep = c(1:22, "X", "Y", "MT"),
  genom_state,
  ensembl = TRUE
)
}
\arguments{
\item{opt_ers}{optimally defined ERs (the product of the ODER function)}

\item{junc_data}{junction data that should match the ERs passed into opt_ers}

\item{gtf_path}{a gtf file with exon data}

\item{chrs_to_keep}{chromosomes to keep in genomic state (in NCBI format i.e.
1,2,3...22,X,Y,MT)}

\item{genom_state}{a genomic state object}

\item{ensembl}{logical variable to say whether the gtf file entered is from
ensembl, the default is true}
}
\value{
annotated ERs
}
\description{
Finds the overlap between junctions and ERs, then adds gene info and junction
info as metadata columns. Then, uses a \code{gtf} file or a \code{Txdb} passed in to
generate a genomic state used to label each ER as to whether they are exonic,
intronic, intergenic or none.
}
\examples{
\dontshow{
if (!exists("gtf_path")) {
    gtf_url <- paste0(
        "http://ftp.ensembl.org/pub/release-103/gtf/",
        "homo_sapiens/Homo_sapiens.GRCh38.103.chr.gtf.gz"
    )
    gtf_path <- .file_cache(gtf_url)
}
}
if (!exists("genom_state")) {
    genom_state <- generate_genomic_state(
        gtf = gtf_path,
        chrs_to_keep = c("21"), ensembl = TRUE
    )
}
ex_opt_ers <- GenomicRanges::GRanges(
    seqnames = S4Vectors::Rle(c("chr21"), c(5)),
    ranges = IRanges::IRanges(
        start = c(5032176, 5033408, 5034717, 5035188, 5036577),
        end = c(5032217, 5033425, 5034756, 5035189, 5036581)
    )
)

junctions <- SummarizedExperiment::rowRanges(dasper::junctions_example)
if (!exists("annot_ers1")) {
    annot_ers1 <- annotatERs(
        opt_ers = ex_opt_ers, junc_data = junctions,
        gtf_path = gtf_path, chrs_to_keep = c("21", "22"), ensembl = TRUE,
        genom_state = genom_state
    )
}
annot_ers1
}
