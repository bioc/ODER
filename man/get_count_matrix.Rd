% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_count_matrix.R
\name{get_count_matrix}
\alias{get_count_matrix}
\title{Generate the count matrix}
\usage{
get_count_matrix(bw_paths, annot_ers, cols = NULL)
}
\arguments{
\item{bw_paths}{Vector containing the bigwig file paths to read in}

\item{annot_ers}{GRangesList containing the annotated ERs (product of annotatERs())}

\item{cols}{A dataframe containing the information to be used as colData for the
output. If NULL then the bw_paths will be used for the colData}
}
\value{
A Ranged Summarized Experiment containing the gene counts as an assay
}
\description{
Generate the count matrix
}
\examples{
\dontshow{
library(magrittr)
gtex_metadata <- recount::all_metadata("gtex")
gtex_metadata <- gtex_metadata \%>\%
    as.data.frame() \%>\%
    dplyr::filter(project == "SRP012682")

url <- recount::download_study(
    project = "SRP012682",
    type = "samples",
    download = FALSE
) # .file_cache is an internal function to download a bigwig file from a link
# if the file has been downloaded recently, it will be retrieved from a cache

bw_path <- ODER:::.file_cache(url[84])
bw_path2 <- ODER:::.file_cache(url[91])

opt_ers <- suppressWarnings(ODER(
    bw_paths = bw_path, auc_raw = gtex_metadata[["auc"]][84],
    auc_target = 40e6 * 100, chrs = c("chr21", "chr22"),
    genome = "hg38", mccs = c(2, 4, 6, 8, 10), mrgs = c(10, 20, 30),
    gtf = gtf_path, ucsc_chr = TRUE, ignore.strand = TRUE,
    exons_no_overlap = NULL, bw_chr = "chr"
))

opt_ers2 <- suppressWarnings(ODER(
    bw_paths = bw_path, auc_raw = gtex_metadata[["auc"]][91],
    auc_target = 40e6 * 100, chrs = c("chr21", "chr22"),
    genome = "hg38", mccs = c(2, 4, 6, 8, 10), mrgs = c(10, 20, 30),
    gtf = gtf_path, ucsc_chr = TRUE, ignore.strand = TRUE,
    exons_no_overlap = NULL, bw_chr = "chr"
))

test_juncs <- SummarizedExperiment::rowRanges(dasper::junctions_example)
aers <- suppressWarnings(annotatERs(opt_ers[["opt_ers"]],
    junc_data = test_juncs,
    gtf_path = gtf_path, ensembl = TRUE
))
aers2 <- suppressWarnings(annotatERs(opt_ers2[["opt_ers"]],
    junc_data = test_juncs,
    gtf_path = gtf_path, ensembl = TRUE
))
}
example_bw_paths <- c(bw_path, bw_path2)
annot_ersl <- GenomicRanges::GRangesList(aers, aers2)

example_cm <- get_count_matrix(bw_paths = example_bw_paths, annot_ers = annot_ersl)
example_cm
}
