% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimise-ERs.R
\name{get_exons}
\alias{get_exons}
\alias{get_ers_delta}
\alias{get_opt_ers}
\title{Obtain set of non-overlapping exons}
\usage{
get_exons(gtf, ucsc_chr, ignore.strand = TRUE, biotype = "Non-overlapping")

get_ers_delta(ers, opt_exons, delta_fun = NULL)

get_opt_ers(ers, ers_delta)
}
\arguments{
\item{gtf}{Either a string containg the path to a .gtf file or a pre-imported
gtf using \code{rtracklayer::import} .}

\item{ucsc_chr}{logical scalar, determining whether to add "chr" prefix to
the seqnames of non-overlapping exons and change "chrMT" -> "chrM". Note,
if set to TRUE and seqnames already have "chr", it will not add another.}

\item{ignore.strand}{logical value for input into
\code{\link[GenomicRanges]{findOverlaps}}, default is True.}

\item{biotype}{Filters the GTF file passed in to what would be considered the
"Gold Standard" exons. The Default is "Non-overlapping" but the options are:
"Non-overlapping" (exons that don't intersect each other),
"Three Prime" (3' UTR), "Five Prime" (5' UTR), "Internal" (Internal coding),
"lncRNA" (Long Non-Coding RNA), "ncRNA" (Non-Coding RNA) and "Pseudogene"}

\item{ers}{Sets of ERs across various MCCs/MRGs - output of
\code{\link{get_ers}}.}

\item{opt_exons}{GRanges object that contains the regions that ideally, you
want the ER definitions to match - output of \code{\link{get_exons}}.}

\item{delta_fun}{Function that calculates the delta between ERs and
\code{opt_exons}. Takes as input a set of ERs from \code{ers} and
\code{opt_exons}. Then outputs a tibble/dataframe containing the summarised
delta scores for that set of one set of ERs.}

\item{ers_delta}{tibble/dataframe containing summarised delta values. One row
per set of ERs.}
}
\value{
GRanges object containing non-overlapping exons.

tibble/dataframe containing summarised delta values. One row per set
of ERs.

list containing optimised ERs, optimal pair of MCC/MRGs and
\code{delta_df}
}
\description{
Downloads a well-defined set of exons to be used in obtaining the optimum set
of Expressed regions. These exons are used in calculating the exon deltas.

Calculates the median exon delta and the number of ERs with an exon delta of
0 by comparing each combination of MCC and MRG with the optimum exons from
the ensembl database.

Uses a delta calculating function and a well defined set of exons to find
which combination of MCC and MRG gives the best definition of the Expressed
regions.
}
\section{Functions}{
\itemize{
\item \code{get_exons}: Filter for the exons to calculate the deltas
against

\item \code{get_ers_delta}: Method to get ers delta to help determine the
optimum ers
}}

\examples{
\dontshow{
if (!exists("gtf_path")) {
    gtf_url <- paste0(
        "http://ftp.ensembl.org/pub/release-103/gtf/",
        "homo_sapiens/Homo_sapiens.GRCh38.103.chr.gtf.gz"
    )
    gtf_path <- file_cache(gtf_url)
}

if (!exists("gtf_gr")) {
    gtf_gr <- rtracklayer::import(gtf_path)
}
}
if (!exists("eg_opt_exons")) {
    eg_opt_exons <- get_exons(
        gtf = gtf_gr,
        ucsc_chr = TRUE,
        ignore.strand = TRUE
    )
}

eg_opt_exons
data(gtex_SRP012682_SRX222703_lung_ers_1, package = "ODER")

if (!exists("eg_ers_delta")) {
    eg_ers_delta <- get_ers_delta(
        ers = gtex_SRP012682_SRX222703_lung_ers_1,
        # gtex_SRP012682_SRX222703_lung_ers_1 is from the package data folder
        opt_exons = eg_opt_exons
    ) # .delta is ODER's default and is used if delta_fun is left NULL
    # you can pass in your own if you have one
}
eg_ers_delta
data(gtex_SRP012682_SRX222703_lung_ers_1, package = "ODER")
opt_ers <- get_opt_ers(
    ers = gtex_SRP012682_SRX222703_lung_ers_1,
    ers_delta = eg_ers_delta
)
opt_ers
}
